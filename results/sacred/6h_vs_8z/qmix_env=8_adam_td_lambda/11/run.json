{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/home/LLM/yeg/LaTac/LT-main/src",
    "dependencies": [
      "munch==2.5.0",
      "numpy==1.21.5",
      "PyYAML==5.3.1",
      "sacred==0.7.5",
      "torch==1.12.1"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [],
    "sources": [
      [
        "main.py",
        "_sources/main_0e642570c09df44c2015d840c312bc14.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_ce9a261c391cbeae67129d3d806d06da.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/home/LLM/miniconda3/envs/pymarl/lib/python3.7/site-packages/sacred/config/captured_function.py\", line 48, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/home/LLM/yeg/LaTac/LT-main/src/main.py\", line 40, in my_main\n    run_REGISTRY[_config['run']](_run, config, _log)\n",
    "  File \"/home/LLM/yeg/LaTac/LT-main/src/run/run.py\", line 61, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/home/LLM/yeg/LaTac/LT-main/src/run/run.py\", line 218, in run_sequential\n    learner.train(episode_sample, runner.t_env, episode)\n",
    "  File \"/home/LLM/yeg/LaTac/LT-main/src/learners/t_learner.py\", line 284, in train\n    sum_loss.backward()\n",
    "  File \"/home/LLM/miniconda3/envs/pymarl/lib/python3.7/site-packages/torch/_tensor.py\", line 396, in backward\n    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)\n",
    "  File \"/home/LLM/miniconda3/envs/pymarl/lib/python3.7/site-packages/torch/autograd/__init__.py\", line 175, in backward\n    allow_unreachable=True, accumulate_grad=True)  # Calls into the C++ engine to run the backward pass\n",
    "RuntimeError: Trying to backward through the graph a second time (or directly access saved tensors after they have already been freed). Saved intermediate values of the graph are freed when you call .backward() or autograd.grad(). Specify retain_graph=True if you need to backward through the graph a second time or if you need to access saved tensors after calling backward.\n"
  ],
  "heartbeat": "2025-06-30T02:47:11.811189",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Xeon(R) Silver 4314 CPU @ 2.40GHz",
    "gpus": {
      "driver_version": "550.144.03",
      "gpus": [
        {
          "model": "NVIDIA GeForce RTX 4090",
          "persistence_mode": false,
          "total_memory": 24564
        },
        {
          "model": "NVIDIA GeForce RTX 4090",
          "persistence_mode": false,
          "total_memory": 24564
        }
      ]
    },
    "hostname": "llm",
    "os": [
      "Linux",
      "Linux-6.8.0-60-generic-x86_64-with-debian-bookworm-sid"
    ],
    "python_version": "3.7.16"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat_interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print_config": false,
      "--priority": null,
      "--queue": false,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.map_name=6h_vs_8z"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2025-06-30T02:46:42.342463",
  "status": "FAILED",
  "stop_time": "2025-06-30T02:47:11.818877"
}