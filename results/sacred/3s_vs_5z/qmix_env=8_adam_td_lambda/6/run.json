{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/home/LLM/\u684c\u9762/LT-main/src",
    "dependencies": [
      "munch==2.5.0",
      "numpy==1.21.5",
      "PyYAML==6.0",
      "sacred==0.7.5",
      "torch==1.12.1"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [],
    "sources": [
      [
        "main.py",
        "_sources/main_a5c3de3f4ed048b3fc484c26f4c11360.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_ce9a261c391cbeae67129d3d806d06da.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/home/LLM/miniconda3/envs/pymarl2/lib/python3.7/site-packages/sacred/config/captured_function.py\", line 48, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/home/LLM/\u684c\u9762/LT-main/src/main.py\", line 40, in my_main\n    run_REGISTRY[_config['run']](_run, config, _log)\n",
    "  File \"/home/LLM/\u684c\u9762/LT-main/src/run/run.py\", line 61, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/home/LLM/\u684c\u9762/LT-main/src/run/run.py\", line 200, in run_sequential\n    episode_batch = runner.run(test_mode=False)\n",
    "  File \"/home/LLM/\u684c\u9762/LT-main/src/runners/parallel_runner.py\", line 121, in run\n    test_mode=test_mode)  # t_ep\u662ftimestep, t_env\u662f+batch_size\n",
    "  File \"/home/LLM/\u684c\u9762/LT-main/src/controllers/tactic_controller.py\", line 74, in select_actions\n    qvals, drop_inputs, _, _, _ = self.forward(ep_batch, t_ep, test_mode=test_mode, drop_prob=drop_prob)\n",
    "  File \"/home/LLM/\u684c\u9762/LT-main/src/controllers/tactic_controller.py\", line 108, in forward\n    agent_tactic = self.tactic_selector.select_tactic(agent_tactic_id, agent_inputs)  # \u9009\u62e9\u6218\u672f\u5bf9\u5e94\u7684embeddings\n",
    "  File \"/home/LLM/\u684c\u9762/LT-main/src/modules/tactic_selectors/tactic_selector.py\", line 48, in select_tactic\n    tactic = th.bmm(tactic_prob, tactic)\n",
    "RuntimeError: batch1 must be a 3D tensor\n"
  ],
  "heartbeat": "2025-01-09T02:25:16.057997",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Xeon(R) Silver 4314 CPU @ 2.40GHz",
    "gpus": {
      "driver_version": "550.120",
      "gpus": [
        {
          "model": "NVIDIA GeForce RTX 4090",
          "persistence_mode": false,
          "total_memory": 24564
        },
        {
          "model": "NVIDIA GeForce RTX 4090",
          "persistence_mode": false,
          "total_memory": 24564
        }
      ]
    },
    "hostname": "llm",
    "os": [
      "Linux",
      "Linux-6.8.0-49-generic-x86_64-with-debian-bookworm-sid"
    ],
    "python_version": "3.7.16"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat_interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print_config": false,
      "--priority": null,
      "--queue": false,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.map_name=3s_vs_5z"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2025-01-09T02:21:32.302930",
  "status": "FAILED",
  "stop_time": "2025-01-09T02:25:16.087703"
}